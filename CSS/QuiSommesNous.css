*,
::before,
::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* Style pour le conteneur de la photo d'équipe */
.Photo-de-equipe {
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    text-align: center;
    background-color: #ffffff;
    padding: 20px; /* (Sinon autre solution : padding: 30px) */
    width: 50%; /* Réduit la largeur pour une meilleure proportion (Sinon autre solution : width: 70%) */
    border: 1px solid #b08d57;
    overflow: hidden; /* Assure que l'image respecte les coins arrondis */ 
}

.Photo-de-equipe img {
    max-width: 400px; /* Limite la taille maximale, sinon la photo prend toute la taille du container, ça permet
    de limiter la taille sur grands écrans (Sinon autre solution : max-width: 600px;) */
    height: auto; /* Maintient les proportions */
    border-radius: 50%; /* Pour un effet portrait circulaire (Sinon autre solution: 10px) */ 
    box-shadow: 0 3px 10px rgba(0,0,0,0.15);
    transition: transform 0.3s ease;
    object-fit: cover; /* Assure un bon recadrage si nécessaire */
}

/* Effet hover sur la photo */
.Photo-de-equipe img:hover {
    transform: scale(1.02); /* Léger zoom au survol */
}

/* Alternative : Si vous voulez une photo plus petite et centrée */
.Photo-de-equipe.compact {
    width: 50%;
    padding: 20px;
}

.Photo-de-equipe.compact img {
    max-width: 400px;
    border-radius: 50%; /* Pour un effet portrait circulaire */
}

/* Style CSS pour la présentation (Titre/Texte/Logo) */

/* Style pour le texte de présentation  */
.container p {
    font-size: 1.2rem;      
    line-height: 1.5;    
    color: #333;
}
/*  Style pour le titre de la page */
.main, h1 {
    color: #333;
    font-family: 'Playfair Display', serif;
    text-align: center; 
    padding: 20px; 
}
/* Style pour le logo */
.container img {
    padding-top: 10px; 
}

/* Style CSS pour tout le slider */

/* Styles pour le slider */
.slider-container {
    position: relative; /* Permet de positionner les éléments enfants en absolu par rapport à ce conteneur, comme ça les images iront se placer dans 
    ? le container */
    width: 80%; /* Largeur du slider à 80% de son conteneur parent (body) */
    margin: 30px auto;  /* marge de 30px haut et bas / et un margin auto pour droit et gauche pour qu'il soit centré*/
    border-radius: 15px; /* Coins arrondis*/
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); /* 0: l'ombre décallée à droite / 5px: l'ombre décallée vers le bas / 15px: diffusion de l'ombre */
    /* La dernière valeur du rgba correspond à l'opacité de l'ombre ici 0.2 équivaut à 20% */
    overflow: hidden; /* Cache tout ce qui dépasse du conteneur, notamment les images qui sortiraient des bords arrondis */
    border: 1px solid #b08d57;
}

/* Style des images dans le slider */
.slide {
    width: 100%; /* L'image prend toute la largeur du conteneur */
    height: 500px; /* Hauteur fixe pour toutes les images */
    object-fit: cover; /* Élimine l'espace blanc sous l'image (comportement par défaut des images inline) *//* Élimine l'espace blanc sous l'image (comportement par défaut des images inline) *//* Élimine l'espace blanc sous l'image (comportement par défaut des images inline) */
    display : block; /* Élimine l'espace blanc sous l'image (comportement par défaut des images inline) */
    transition: opacity 0.5s ease; /* Animation douce lors du changement d'image */
}

/* Container pour les flèches de navigation */
.Fleches-container {
    position: absolute; /* Positionnement absolu par rapport au conteneur parent (qui est en position relative) */
    width: 100%;  /* Prend toute la largeur du conteneur parent */
    top: 50%;
     transform: translateY(-50%);  /* Décale le conteneur vers le haut de 50% de sa propre hauteur pour un centrage vertical parfait */
    display: flex; /* Utilise flexbox pour placer les flèches gauche et droite */
    justify-content: space-between;  /* Place les flèches aux extrémités gauche et droite */
    padding: 0 20px; /* Espace de 20px à gauche et à droite pour que les flèches ne soient pas collées aux bords et 0 pour haut et bas*/
}

/* Style des flèches */
.fleche-gauche, .right-arrow {
    
    width: 40px;  /* Largeur fixe pour les flèches */
    height: 40px;  /* Hauteur fixe pour les flèches */
    background-color: rgba(255, 255, 255, 0.7); /* Fond blanc semi-transparent */
    border-radius: 50%;  /* Forme parfaitement ronde */
    cursor: pointer; 
    transition: all 0.3s ease; /* Animation douce pour tous les changements de propriétés */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Légère ombre pour donner du relief */
    padding: 8px; /* Espace intérieur pour que l'image de flèche ne touche pas les bords */
}

.fleche-gauche:hover, .right-arrow:hover {
    background-color: rgba(255, 255, 255, 0.9); /* Fond plus opaque au survol, la couleur change au survol */
    transform: scale(1.1);  /* Agrandit légèrement la flèche au survol (effet zoom) */
}



/* Effet de transition pour les images */
@keyframes fadeIn {
    from {
        /* opacity: 0; L'image commence invisible / On voit la couleur blanche du body quand elle est invisible */
    }
    to {
        opacity: 1;   /* L'image devient complètement visible */
    }
}

.slide {
    animation: fadeIn 0.5s ease;  /* Applique l'animation de fondu aux images */
}

/* Style responsive pour les écrans plus petits */
@media (max-width: 768px) {
    .slider-container {
        width: 95%; /* Augmente la largeur du slider sur petit écran pour maximiser l'espace */
    }
    
    .slide {
        height: 300px;  /* Réduit légèrement la hauteur des images sur petit écran */
    }
    
    .fleche-gauche, .right-arrow {  /* Flèches légèrement plus petites sur petit écran */
        width: 35px;
        height: 35px;
    }
}

